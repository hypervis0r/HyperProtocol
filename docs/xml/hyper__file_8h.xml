<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="hyper__file_8h" kind="file" language="C++">
    <compoundname>hyper_file.h</compoundname>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">unistd.h</includes>
    <includes refid="hyper_8h" local="no">hyper.h</includes>
    <includes refid="hyper__network_8h" local="no">hyper/hyper_network.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includedby refid="hyper_8h" local="no">include/hyper.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>sys/stat.h</label>
      </node>
      <node id="8">
        <label>arpa/inet.h</label>
      </node>
      <node id="6">
        <label>hyper/hyper_network.h</label>
        <link refid="hyper__network_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stdlib.h</label>
      </node>
      <node id="9">
        <label>errno.h</label>
      </node>
      <node id="3">
        <label>fcntl.h</label>
      </node>
      <node id="10">
        <label>string.h</label>
      </node>
      <node id="4">
        <label>unistd.h</label>
      </node>
      <node id="5">
        <label>hyper.h</label>
        <link refid="hyper_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>sys/socket.h</label>
      </node>
      <node id="1">
        <label>include/hyper/hyper_file.h</label>
        <link refid="hyper__file_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>include/hyper/hyper_network.h</label>
        <link refid="hyper__network_8h"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/hyper.h</label>
        <link refid="hyper_8h"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/hyper/hyper_file.h</label>
        <link refid="hyper__file_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="hyper__file_8h_1a15238d020022011672c7b89e03ddb706" prot="public" static="no">
        <name>READALL_CHUNK</name>
        <initializer>262144</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hyper/hyper_file.h" line="12" column="10" bodyfile="include/hyper/hyper_file.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hyper__file_8h_1a6b7e6fad801806419090c69df210b1d4" prot="public" static="no">
        <name>READALL_OK</name>
        <initializer>0  /* Success */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hyper/hyper_file.h" line="14" column="11" bodyfile="include/hyper/hyper_file.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hyper__file_8h_1a11e3706ad1144afdd8ff0389569c0acc" prot="public" static="no">
        <name>READALL_INVALID</name>
        <initializer>-1  /* Invalid parameters */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hyper/hyper_file.h" line="15" column="10" bodyfile="include/hyper/hyper_file.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hyper__file_8h_1a2d5fcf2cd1871ea96bc17ac759efdccb" prot="public" static="no">
        <name>READALL_ERROR</name>
        <initializer>-2  /* Stream error */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hyper/hyper_file.h" line="16" column="10" bodyfile="include/hyper/hyper_file.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hyper__file_8h_1a3b5b670868b7d99075a1b97fb18f869d" prot="public" static="no">
        <name>READALL_TOOMUCH</name>
        <initializer>-3  /* Too much input */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hyper/hyper_file.h" line="17" column="10" bodyfile="include/hyper/hyper_file.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hyper__file_8h_1af8356e8f549f5be276cd3c44164c1b54" prot="public" static="no">
        <name>READALL_NOMEM</name>
        <initializer>-4  /* Out of memory */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hyper/hyper_file.h" line="18" column="10" bodyfile="include/hyper/hyper_file.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hyper__file_8h_1a7a43a46b4df51ba89e3fdbc1ed53cdd4" prot="public" static="no">
        <name>SEND_BLOCK_SIZE</name>
        <initializer>4096</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hyper/hyper_file.h" line="21" column="10" bodyfile="include/hyper/hyper_file.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hyper__file_8h_1a2c3d76297c93a12eb76304ba2490caac" prot="public" static="no">
        <name>RECV_BLOCK_SIZE</name>
        <initializer>4096</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hyper/hyper_file.h" line="22" column="10" bodyfile="include/hyper/hyper_file.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hyper__file_8h_1a9e3ad2c714832ab6609b85b285bae64d" prot="public" static="no">
        <name>FILESIZE_BUFFER_SIZE</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hyper/hyper_file.h" line="24" column="10" bodyfile="include/hyper/hyper_file.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="hyper__file_8h_1a02905a0adaf6e4cf532ace649b92d3e7" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* HYPERFILE</definition>
        <argsstring></argsstring>
        <name>HYPERFILE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hyper/hyper_file.h" line="27" column="16" bodyfile="include/hyper/hyper_file.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="hyper__file_8h_1a24f53ae7a869f84d2ba6fd6e2d6ffd23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HYPERSTATUS</type>
        <definition>HYPERSTATUS HyperReadFileC</definition>
        <argsstring>(FILE *in, HYPERFILE *dataptr, size_t *sizeptr)</argsstring>
        <name>HyperReadFileC</name>
        <param>
          <type>FILE *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>HYPERFILE *</type>
          <declname>dataptr</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>sizeptr</declname>
        </param>
        <briefdescription>
<para>Read file into HYPERFILE buffer using standard C. </para>
        </briefdescription>
        <detaileddescription>
<para>Reads a file from a FILE pointer into a HYPERFILE buffer. Uses Standard C for platform-agnostic file I/O.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>FILE pointer to an open file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dataptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a NULL HYPERFILE buffer that holds the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">sizeptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a size_t that holds the file size</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns HYPER_SUCCESS if successful. If something fails, returns HYPER_FAILED.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="hyper__file_8h_1aa80d1b091e6fa759e84cb228eeb32afd" kindref="member">HyperWriteFileC</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="hyper__file_8h_1a1ad252cf5a4ab2c7597e8a912f351345" kindref="member">HyperReadFile</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="hyper__file_8h_1af1f12403807241a9c82e22c3ac8cfcd3" kindref="member">HyperWriteFile</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hyper/hyper_file.h" line="66" column="1" declfile="include/hyper/hyper_file.h" declline="66" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="hyper__file_8h_1a1ad252cf5a4ab2c7597e8a912f351345" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HYPERSTATUS</type>
        <definition>HYPERSTATUS HyperReadFile</definition>
        <argsstring>(const char *cpFilePath, HYPERFILE *lpBuffer, size_t *lpFileSize)</argsstring>
        <name>HyperReadFile</name>
        <param>
          <type>const char *</type>
          <declname>cpFilePath</declname>
        </param>
        <param>
          <type>HYPERFILE *</type>
          <declname>lpBuffer</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>lpFileSize</declname>
        </param>
        <briefdescription>
<para>Read file into HYPERFILE buffer using platform-specifics. </para>
        </briefdescription>
        <detaileddescription>
<para>Reads a file from a file path into a HYPERFILE buffer. Uses platform-specific file I/O functions for faster speed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cpFilePath</parametername>
</parameternamelist>
<parameterdescription>
<para>char pointer to file path on disk </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">lpBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a NULL HYPERFILE buffer that holds the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">lpFileSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a size_t that holds the file size</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns HYPER_SUCCESS if successful. If something fails, returns HYPER_FAILED.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="hyper__file_8h_1af1f12403807241a9c82e22c3ac8cfcd3" kindref="member">HyperWriteFile</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="hyper__file_8h_1a24f53ae7a869f84d2ba6fd6e2d6ffd23" kindref="member">HyperReadFileC</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="hyper__file_8h_1aa80d1b091e6fa759e84cb228eeb32afd" kindref="member">HyperWriteFileC</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hyper/hyper_file.h" line="90" column="1" declfile="include/hyper/hyper_file.h" declline="90" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="hyper__file_8h_1aa80d1b091e6fa759e84cb228eeb32afd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HYPERSTATUS</type>
        <definition>HYPERSTATUS HyperWriteFileC</definition>
        <argsstring>(FILE *pFile, const HYPERFILE hfBuffer, const size_t stFileSize)</argsstring>
        <name>HyperWriteFileC</name>
        <param>
          <type>FILE *</type>
          <declname>pFile</declname>
        </param>
        <param>
          <type>const HYPERFILE</type>
          <declname>hfBuffer</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>stFileSize</declname>
        </param>
        <briefdescription>
<para>Write file from HYPERFILE buffer to disk using standard C. </para>
        </briefdescription>
        <detaileddescription>
<para>Writes a file from a HYPERFILE buffer to disk. Uses Standard C for platform-agnostic file I/O.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>in FILE pointer to an open file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hfBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>HYPERFILE buffer thats holding file data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stFileSize</parametername>
</parameternamelist>
<parameterdescription>
<para>size_t that holds the file size</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns HYPER_SUCCESS if successful. If something fails, returns HYPER_FAILED.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="hyper__file_8h_1a24f53ae7a869f84d2ba6fd6e2d6ffd23" kindref="member">HyperReadFileC</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="hyper__file_8h_1af1f12403807241a9c82e22c3ac8cfcd3" kindref="member">HyperWriteFile</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="hyper__file_8h_1a1ad252cf5a4ab2c7597e8a912f351345" kindref="member">HyperReadFile</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hyper/hyper_file.h" line="114" column="1" declfile="include/hyper/hyper_file.h" declline="114" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="hyper__file_8h_1af1f12403807241a9c82e22c3ac8cfcd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HYPERSTATUS</type>
        <definition>HYPERSTATUS HyperWriteFile</definition>
        <argsstring>(const char *cpFilePath, const HYPERFILE hfBuffer, const size_t stFileSize)</argsstring>
        <name>HyperWriteFile</name>
        <param>
          <type>const char *</type>
          <declname>cpFilePath</declname>
        </param>
        <param>
          <type>const HYPERFILE</type>
          <declname>hfBuffer</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>stFileSize</declname>
        </param>
        <briefdescription>
<para>Write file from HYPERFILE buffer to disk using platform-specifics. </para>
        </briefdescription>
        <detaileddescription>
<para>Writes a file from a HYPERFILE buffer to disk. Uses platform-specific file I/O for faster speeds.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cpFilePath</parametername>
</parameternamelist>
<parameterdescription>
<para>File path to write file to <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hfBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>HYPERFILE buffer thats holding file data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stFileSize</parametername>
</parameternamelist>
<parameterdescription>
<para>size_t that holds the file size</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns HYPER_SUCCESS if successful. If something fails, returns HYPER_FAILED.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="hyper__file_8h_1a1ad252cf5a4ab2c7597e8a912f351345" kindref="member">HyperReadFile</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="hyper__file_8h_1aa80d1b091e6fa759e84cb228eeb32afd" kindref="member">HyperWriteFileC</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="hyper__file_8h_1a24f53ae7a869f84d2ba6fd6e2d6ffd23" kindref="member">HyperReadFileC</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hyper/hyper_file.h" line="138" column="1" declfile="include/hyper/hyper_file.h" declline="138" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="hyper__file_8h_1a2fcf69afd9c81616aaac48a84891d37b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HYPERSTATUS</type>
        <definition>HYPERSTATUS HyperReceiveFile</definition>
        <argsstring>(const SOCKET sockServer, HYPERFILE *lpBuffer, unsigned long *ulSize)</argsstring>
        <name>HyperReceiveFile</name>
        <param>
          <type>const SOCKET</type>
          <declname>sockServer</declname>
        </param>
        <param>
          <type>HYPERFILE *</type>
          <declname>lpBuffer</declname>
        </param>
        <param>
          <type>unsigned long *</type>
          <declname>ulSize</declname>
        </param>
        <briefdescription>
<para>Receive file from network into HYPERFILE buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>Recieves a file from a connected socket, and writes it into a HYPERFILE buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sockServer</parametername>
</parameternamelist>
<parameterdescription>
<para>Open, connected socket to receive from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">lpBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>HYPERFILE buffer to write data to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">stFileSize</parametername>
</parameternamelist>
<parameterdescription>
<para>size_t to write file size to</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns HYPER_SUCCESS if successful. If something fails, returns HYPER_FAILED.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="hyper__file_8h_1a885b772f84e47a106ca7a41fea41c226" kindref="member">HyperSendFile</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hyper/hyper_file.h" line="160" column="1" declfile="include/hyper/hyper_file.h" declline="160" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="hyper__file_8h_1a885b772f84e47a106ca7a41fea41c226" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HYPERSTATUS</type>
        <definition>HYPERSTATUS HyperSendFile</definition>
        <argsstring>(const SOCKET sockServer, HYPERFILE *lpBuffer, const unsigned long ulSize)</argsstring>
        <name>HyperSendFile</name>
        <param>
          <type>const SOCKET</type>
          <declname>sockServer</declname>
        </param>
        <param>
          <type>HYPERFILE *</type>
          <declname>lpBuffer</declname>
        </param>
        <param>
          <type>const unsigned long</type>
          <declname>ulSize</declname>
        </param>
        <briefdescription>
<para>Send file from HYPERFILE buffer over network. </para>
        </briefdescription>
        <detaileddescription>
<para>Sends a file stored in a HYPERFILE buffer over the network to a connected socket.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sockServer</parametername>
</parameternamelist>
<parameterdescription>
<para>Open, connected socket to send to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>lpBuffer HYPERFILE buffer to write data to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stFileSize</parametername>
</parameternamelist>
<parameterdescription>
<para>size_t to write file size to</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns HYPER_SUCCESS if successful. If something fails, returns HYPER_FAILED.</para>
</simplesect>
<simplesect kind="remark"><para>lpBuffer is reallocated to (ulSize + SEND_BLOCK_SIZE)</para>
</simplesect>
<simplesect kind="see"><para><ref refid="hyper__file_8h_1a2fcf69afd9c81616aaac48a84891d37b" kindref="member">HyperReceiveFile</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hyper/hyper_file.h" line="184" column="1" declfile="include/hyper/hyper_file.h" declline="184" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Contains all file I/O functions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>_FILE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_FILE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Size<sp/>of<sp/>each<sp/>input<sp/>chunk<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/>read<sp/>and<sp/>allocate<sp/>for.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/><sp/>READALL_CHUNK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>READALL_CHUNK<sp/><sp/><sp/><sp/><sp/><sp/>262144</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>READALL_OK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/></highlight><highlight class="comment">/*<sp/>Success<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>READALL_INVALID<sp/><sp/><sp/>-1<sp/><sp/></highlight><highlight class="comment">/*<sp/>Invalid<sp/>parameters<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>READALL_ERROR<sp/><sp/><sp/><sp/><sp/>-2<sp/><sp/></highlight><highlight class="comment">/*<sp/>Stream<sp/>error<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>READALL_TOOMUCH<sp/><sp/><sp/>-3<sp/><sp/></highlight><highlight class="comment">/*<sp/>Too<sp/>much<sp/>input<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>READALL_NOMEM<sp/><sp/><sp/><sp/><sp/>-4<sp/><sp/></highlight><highlight class="comment">/*<sp/>Out<sp/>of<sp/>memory<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>block<sp/>sizes.<sp/>4096<sp/>is<sp/>a<sp/>nice<sp/>number<sp/>lol<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>SEND_BLOCK_SIZE<sp/><sp/><sp/><sp/>4096</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>RECV_BLOCK_SIZE<sp/><sp/><sp/><sp/>4096</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>FILESIZE_BUFFER_SIZE<sp/><sp/><sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Typedefs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/>HYPERFILE;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Platform<sp/>Specifics<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>WIN32_LEAN_AND_MEAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Includes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="hyper_8h" kindref="compound">hyper.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="hyper__network_8h" kindref="compound">hyper/hyper_network.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Libc<sp/>Includes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">HYPERSTATUS<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="hyper__file_8h_1a24f53ae7a869f84d2ba6fd6e2d6ffd23" kindref="member">HyperReadFileC</ref>(</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*in,<sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>HYPERFILE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dataptr,<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sizeptr</highlight></codeline>
<codeline lineno="70"><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">HYPERSTATUS</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><ref refid="hyper__file_8h_1a1ad252cf5a4ab2c7597e8a912f351345" kindref="member">HyperReadFile</ref>(</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cpFilePath,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>HYPERFILE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*lpBuffer,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*lpFileSize</highlight></codeline>
<codeline lineno="94"><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">HYPERSTATUS</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><ref refid="hyper__file_8h_1aa80d1b091e6fa759e84cb228eeb32afd" kindref="member">HyperWriteFileC</ref>(</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pFile,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HYPERFILE<sp/><sp/><sp/><sp/><sp/>hfBuffer,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stFileSize</highlight></codeline>
<codeline lineno="118"><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">HYPERSTATUS</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><ref refid="hyper__file_8h_1af1f12403807241a9c82e22c3ac8cfcd3" kindref="member">HyperWriteFile</ref>(</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cpFilePath,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HYPERFILE<sp/><sp/><sp/><sp/><sp/>hfBuffer,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stFileSize</highlight></codeline>
<codeline lineno="142"><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">HYPERSTATUS<sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><ref refid="hyper__file_8h_1a2fcf69afd9c81616aaac48a84891d37b" kindref="member">HyperReceiveFile</ref>(</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SOCKET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sockServer,<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>HYPERFILE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*lpBuffer,<sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ulSize</highlight></codeline>
<codeline lineno="164"><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">HYPERSTATUS<sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><ref refid="hyper__file_8h_1a885b772f84e47a106ca7a41fea41c226" kindref="member">HyperSendFile</ref>(</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SOCKET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sockServer,<sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>HYPERFILE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*lpBuffer,<sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ulSize</highlight></codeline>
<codeline lineno="188"><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/hyper/hyper_file.h"/>
  </compounddef>
</doxygen>
